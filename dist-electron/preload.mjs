"use strict";const n=require("electron");n.contextBridge.exposeInMainWorld("ipcRenderer",{on:(...e)=>n.ipcRenderer.on(...e),off:(...e)=>n.ipcRenderer.off(...e),send:(...e)=>n.ipcRenderer.send(...e),invoke:(...e)=>n.ipcRenderer.invoke(...e)});n.contextBridge.exposeInMainWorld("electronAPI",{showContextMenu:(e,o)=>{n.ipcRenderer.send("show-context-menu",e,o)},onContextMenuAction:e=>{n.ipcRenderer.on("context-menu-action",(o,r,t,i)=>{e(r,t,i),console.log(`${o} sent back.`)})},offContextMenuAction:e=>{n.ipcRenderer.removeListener("context-menu-action",(o,r,t,i)=>{e(r,t,i),console.log(`${o} sent back.`)})},generateInvoicePdf:e=>n.ipcRenderer.invoke("generate-invoice-pdf",e),onInvoiceData:e=>{n.ipcRenderer.on("invoice-data",(o,r)=>e(r))},sendInvoiceRendered:()=>{n.ipcRenderer.send("invoice-rendered")},checkForUpdates:()=>n.ipcRenderer.invoke("check-for-updates"),quitAndInstall:()=>n.ipcRenderer.invoke("quit-and-install"),onUpdateStatus:e=>{n.ipcRenderer.on("update-status",(o,r)=>e(r))}});
